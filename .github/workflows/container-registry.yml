name: "Container Registry"

on:
  workflow_dispatch:
    inputs:
      type:
        description: "Tipo de execução (plan/apply)?"
        default: "plan"

env:
  TF_CLOUD_ORGANIZATION: "fiap_postech"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "container-registry"
  CONFIG_DIRECTORY: "./ecr"

jobs:
  terraform:
    name: "ECR"
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Create Apply Run
        if: "${{ github.event.inputs.type == 'apply' }}"
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}

      - name: Apply
        if: ${{ github.event.inputs.type == 'apply' }} && fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
